package usingcollections;

import java.time.LocalDate;
import java.util.*;

public class UseArrayList {

  // DON'T leave out the generic type, it will risk
  // subsequent errors. This code is possible for
  // backward (pre Java 5!!!) compatibility
  // you might run into this working on legacy code
  public static void breakTheList(List al) {
    al.add(3, LocalDate.now());
  }

  public static void showAll(Iterable<String> it) {
//    Iterator<String> i = it.iterator();
//    while (i.hasNext()) {
//      System.out.println("> " + i.next());
//    }
    for (var s : it) {
      System.out.println("> " + s);
    }
  }

  public static void main(String[] args) {
//    List<String> names = new ArrayList(/*128*/);
//    List<String> names = new LinkedList();
    Collection<String> names = new HashSet();
//    Iterable<String> names = new HashSet(); // nope, no add methods!!!

    boolean success = names.add("Fred");
    System.out.println("added Fred? " + success);
    names.add("Jim");
    names.add("Sheila");
    success = names.add("Fred");
    System.out.println("added Fred? " + success);

    System.out.println("this is the list: " + names);

    names.remove(0);
    System.out.println("this is the list: " + names);

    names.remove("Sheila");
    System.out.println("this is the list: " + names);

//    names.add(0, "Frederick");
//    System.out.println("this is the list: " + names);
//    System.out.println(names.get(1));
//
//    System.out.println("Currently containing " + names.size());

    names.add("Sheila");
    System.out.println("Currently containing " + names.size());

    showAll(names);

//    names.add(LocalDate.now());
//    System.out.println("this is the list: " + names);
//
//    breakTheList(names);
//    String aName = (String)names.get(3);
//    String aName = names.get(3);  // Cast is generated by compiler
//    System.out.println("name is " + aName);
  }
}
